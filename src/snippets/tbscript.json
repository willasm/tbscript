{
	// Example tbscript snippets. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected. See https://code.visualstudio.com/api/language-extensions/snippet-guide for full details.
	//
	// To auto generate your snippets, use the great tool created by Pawel Grzybek found at https://snippet-generator.app/
	//
	// Included snippets to insert new main subroutine and new support subroutine.
	// Also included is a demo script as a snippet.
    // Modify or delete at your discretion...
	//
	"New Main Subroutine": {
		"prefix": "snipNewMainSub",
		"body": [
		  "//=======================================================================",
		  "// ${1:SCRIPT_TITLE_CONST} - ${2:SCRIPT_DESCRIPTION}|",
                  "// Created On: $CURRENT_MONTH_NAME $CURRENT_DATE $CURRENT_YEAR                                          |",
		  "//-----------------------------------------------------------------------",
		  "// Input..: $3                                                            |",
		  "//                                                                      |",
		  "// Returns: $4                                                            |",
		  "//                                                                      |",
		  "// Notes..: $5                                                            |",
		  "//                                                                      |",
		  "//-----------------------------------------------------------------------",
                  "const SCRIPT_TITLE = \"$1\"",
		  "",
		  "//-----------------------------------------------------------------------",
		  "// Main Script Entry Point Subroutine                                   |",
		  "//-----------------------------------------------------------------------",
		  "sub main()",
		  "    $0",
		  "",
		  "    getkey(\"Press Any Key To Exit...\")",
		  "",
		  "end sub",
		  ""
		],
		"description": "New Main Subroutine"
	}
	"New Support Subroutine": {
		"prefix": "snipNewSupportSub",
		"body": [
		  "//=======================================================================",
		  "// ${1:SUB_TITLE} - ${2:SUB_DESCRIPTION}|",
                  "// Created On: $CURRENT_MONTH_NAME $CURRENT_DATE $CURRENT_YEAR                                          |",
		  "//-----------------------------------------------------------------------",
		  "// Input..: ${3:param1, param2,...}                                                            |",
		  "//                                                                      |",
		  "// Returns: $4                                                            |",
		  "//                                                                      |",
		  "// Notes..: $5                                                            |",
		  "//                                                                      |",
		  "//-----------------------------------------------------------------------",
		  "",
		  "//-----------------------------------------------------------------------",
		  "// $1 Script Entry Point Subroutine                             |",
		  "//-----------------------------------------------------------------------",
		  "sub $1($3)",
		  "    $0",
		  "",
		  "    getkey(\"Press Any Key To Exit...\")",
		  "",
		  "end sub",
		  ""
		],
		"description": "New Support Subroutine"
	}
	"Demo Script": {
		"prefix": "snipDemoScript",
		"body": [
		"//=======================================================================",
		"// TBSCRIPT DEMO - Quick demonstration of tbscript programming language |",
		"// Created On: November 15 2021                                         |",
		"//-----------------------------------------------------------------------",
		"// Input..: N/A                                                         |",
		"//                                                                      |",
		"// Returns: N/A                                                         |",
		"//                                                                      |",
		"// Notes..: A short demo script to demonstrate in my VSCode tbscript    |",
		"//          programming language extension.                             |",
		"//-----------------------------------------------------------------------",
		"const SCRIPT_TITLE = \"TBSCRIPT DEMO\"",
		"const SCRIPT_DESC = \"A Quick Demonstration of tbscript\"",
		"// Screen Colors",
		"const COLOR_TITLE          = 0x1F	// White text on Blue BG",
		"const COLOR_DESC           = 0x16	// Yellow text on Blue BG",
		"const COLOR_SYSINFO        = 0x70	// Black text on Light Grey BG",
		"",
		"// key codes",
		"const KEY_ESCAPE  = 27",
		"",
		"//-----------------------------------------------------------------------",
		"// Main Script Entry Point Subroutine                                   |",
		"//-----------------------------------------------------------------------",
		"sub main()",
		"    ",
		"    //--------------------",
		"    // Initialize terminal",
		"    //--------------------",
		"    TxInit()						// Init Tx mode for screen control",
		"	TxAscii(1)						// Set for ASCII Output",
		"	TXCursorType(0)					// Hide the Cursor",
		"	ti=TXGetInfo()					// Get Terminal Info",
		"	termHeight=ti.ViewHeight		// Save Terminal Height",
		"	termWidth=ti.ViewWidth			// Save Terminal Width",
		"	cls()							// Clear the Screen",
		"",
		"    //-----------------------------",
		"    // Draw the Title to the Screen",
		"    //-----------------------------",
		"	TXGotoXY(1, 1)								// Home Cursor",
		"	TXSetAttr(COLOR_TITLE)						// Set Title Color Scheme",
		"	print(PAD(\" \", termWidth, 1))			    // Print 3 Line Title",
		"	print(PAD(SCRIPT_TITLE, termWidth, 1))",
		"	print(PAD(\" \", termWidth, 1))",
		"	TXSetAttr(COLOR_DESC)						// Set Description Color Scheme",
		"	print(PAD(SCRIPT_DESC, termWidth, 1))",
		"	print(PAD(\" \", termWidth, 1))",
		"",
		"    //-----------------------------------",
		"    // Draw the System Info to the Screen",
		"    //-----------------------------------",
		"    si=getsysinfo()                             // Get System Information",
		"    if (si) then",
		"    	TXSetAttr(COLOR_SYSINFO)			    // Set System Information Color Scheme",
		"        print(PAD(\"    BIOS Date..........: \"#si.biosdate, termWidth, 0))",
		"        print(PAD(\"    BIOS Vendor........: \"#si.biosvendor, termWidth, 0))",
		"        print(PAD(\"    BIOS Version.......: \"#si.biosversion, termWidth, 0))",
		"        print(PAD(\"    System Family......: \"#si.sysfamily, termWidth, 0))",
		"        print(PAD(\"    System Manufacturer: \"#si.sysmanufacturer, termWidth, 0))",
		"        print(PAD(\"    System Product Name: \"#si.sysproductname, termWidth, 0))",
		"        print(PAD(\"    System SKU.........: \"#si.syssku, termWidth, 0))",
		"        print(PAD(\"    System Version.....: \"#si.sysversion, termWidth, 0))",
		"    else",
		"        printl(\"Unable to obtain the system information\")",
		"    end if",
		"",
		"    ;-------------------------",
		"    ; Get User Input Selection",
		"    ;-------------------------",
		"GetKeyPress:",
		"	key=GetKey()					// Get user Input",
		"	//=- ESC KEY -=//",
		"	if key=KEY_ESCAPE then			// Pressed ESC Key",
		"		TxTerm()					// Terminate Console Subroutines",
		"		return()					// Exit Script Subroutine",
		"	else							// Pressed Invalid Key",
		"		goto GetKeyPress",
		"	end if",
		"    ",
		"end sub",
		""
		],
	"description": "Demo Script"
	}
}